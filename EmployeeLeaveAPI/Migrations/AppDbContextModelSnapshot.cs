// <auto-generated />
using System;
using EmployeeLeaveAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeLeaveAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeLeaveAPI.Models.LeaveType", b =>
                {
                    b.Property<int>("LeaveTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveTypeID"));

                    b.Property<int>("MaximumDays")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LeaveTypeID");

                    b.ToTable("LeaveTypes");

                    b.HasData(
                        new
                        {
                            LeaveTypeID = 1,
                            MaximumDays = 20,
                            Name = "Vacation"
                        },
                        new
                        {
                            LeaveTypeID = 2,
                            MaximumDays = 10,
                            Name = "Sick Leave"
                        });
                });

            modelBuilder.Entity("EmployeeLeaveAPI.Models.Request", b =>
                {
                    b.Property<int>("RequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestID"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeaveStatus")
                        .HasColumnType("int");

                    b.Property<int>("LeaveTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("RequestID");

                    b.HasIndex("LeaveTypeID");

                    b.HasIndex("UserID");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("EmployeeLeaveAPI.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "123 Main St",
                            Email = "john@example.com",
                            IsAdmin = false,
                            Name = "John Doe",
                            Password = "password123"
                        },
                        new
                        {
                            ID = 2,
                            Address = "456 Admin Ave",
                            Email = "admin@example.com",
                            IsAdmin = true,
                            Name = "Admin User",
                            Password = "adminpassword"
                        });
                });

            modelBuilder.Entity("EmployeeLeaveAPI.Models.UserLeaveBalance", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("DaysUsed")
                        .HasColumnType("int");

                    b.Property<int>("LeaveTypeID")
                        .HasColumnType("int");

                    b.Property<int>("MaximumDays")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LeaveTypeID");

                    b.HasIndex("UserID");

                    b.ToTable("UserLeaveBalances");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DaysUsed = 5,
                            LeaveTypeID = 1,
                            MaximumDays = 20,
                            UserID = 1
                        },
                        new
                        {
                            ID = 2,
                            DaysUsed = 3,
                            LeaveTypeID = 2,
                            MaximumDays = 10,
                            UserID = 1
                        });
                });

            modelBuilder.Entity("EmployeeLeaveAPI.Models.Request", b =>
                {
                    b.HasOne("EmployeeLeaveAPI.Models.LeaveType", "FKLeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeLeaveAPI.Models.User", "FKUser")
                        .WithMany("Requests")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FKLeaveType");

                    b.Navigation("FKUser");
                });

            modelBuilder.Entity("EmployeeLeaveAPI.Models.UserLeaveBalance", b =>
                {
                    b.HasOne("EmployeeLeaveAPI.Models.LeaveType", "FKLeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeLeaveAPI.Models.User", "FKUser")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FKLeaveType");

                    b.Navigation("FKUser");
                });

            modelBuilder.Entity("EmployeeLeaveAPI.Models.User", b =>
                {
                    b.Navigation("Requests");
                });
#pragma warning restore 612, 618
        }
    }
}
